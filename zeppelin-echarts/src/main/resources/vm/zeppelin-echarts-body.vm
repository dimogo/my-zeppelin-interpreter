<div id="ze-paragraph-${ZeppelinEChartsParagraphId}" class="container-fluid ze-example">
    <div id="ze-console">
        <div class="form-group row">
            <label for="inputEmail3" class="col-sm-1 control-label">主标题</label>

            <div class="col-sm-5">
            <input type="text" class="form-control" id="ze-title" placeholder="图表的主标题"
                #if ($ZeppelinEchartsTitle) value=$ZeppelinEchartsTitile" #else value="" #end >
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">副标题</label>

            <div class="col-sm-5">
                <input type="text" class="form-control" id="ze-subtitle" placeholder="图表的副标题"
                #if ($ZeppelinEchartsSubTitle) "$ZeppelinEchartsSubTitle" #else "" #end >
            </div>
        </div>
        <div class="form-group row">
            <label for="inputEmail3" class="col-sm-1 control-label">系列</label>

            <div class="col-sm-2">
                <input type="text" class="form-control" id="ze-serie-name" placeholder="图表系列名称">
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">图表</label>

            <div class="col-sm-2">
                <select id="ze-type" class="form-control">
                    <option value="" selected></option>
                    <option value="pie">饼图</option>
                    <option value="bar">柱状图</option>
                    <option value="line">折线图</option>
                    <option value="scatter">散点图</option>
                    <option value="radar">雷达图</option>
                </select>
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">宽度</label>

            <div class="col-sm-2">
                <input type="text" class="form-control" id="ze-graphic-width" placeholder="图表的宽度"
                    #if($ZeppelinECahrtsWidth) value="$ZeppelinECahrtsWidth" #end>
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">高度</label>

            <div class="col-sm-2">
                <input type="text" class="form-control" id="ze-graphic-height" placeholder="图表的高度"
                    #if($ZeppelinECahrtsHeight) value="$ZeppelinECahrtsHeight" #end>
            </div>
        </div>
        <div class="form-group row">
            <label for="inputEmail3" class="col-sm-1 control-label">x序号</label>

            <div class="col-sm-2">
                <select id="ze-xaxis" class="form-control">
                </select>
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">x类型</label>

            <div class="col-sm-2">
                <select id="ze-xaxis-type" class="form-control">
                    <option value="value">数值</option>
                    <option value="category" selected>类目</option>
                    <option value="time">时间</option>
                    <option value="log">对数</option>
                </select>
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">y序号</label>

            <div class="col-sm-2">
                <select id="ze-yaxis" class="form-control">
                </select>
            </div>
            <label for="inputEmail3" class="col-sm-1 control-label">y类型</label>

            <div class="col-sm-2">
                <select id="ze-yaxis-type" class="form-control">
                    <option value="value" selected>数值</option>
                    <option value="category">类目</option>
                    <option value="time">时间</option>
                    <option value="log">对数</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <select name="from" id="ze-selectable-fields" class="form-control" size="13"
                        multiple="multiple">
                </select>
            </div>

            <div class="col-sm-2">
                <button type="button" id="ze-fields-move-to-up"
                        class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-chevron-up"></i>
                </button>
                <button type="button" id="ze-fields-all-to-right"
                        class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-forward"></i>
                </button>
                <button type="button" id="ze-fields-to-right"
                        class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-chevron-right"></i>
                </button>
                <button type="button" id="ze-fields-to-left"
                        class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-chevron-left"></i>
                </button>
                <button type="button" id="ze-fields-all-to-left"
                        class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-backward"></i>
                </button>
                <button type="button" id="ze-fields-move-to-down"
                        class="btn btn-default btn-block">
                    <i class="glyphicon glyphicon-chevron-down"></i>
                </button>
            </div>

            <div class="col-sm-5">
                <select name="to" id="ze-selected-fields" class="form-control"
                        size="13" multiple="multiple"></select>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <table id="ze-series" class="table table-bordered">
                    <tr>
                        <td>#
                        <td>名称
                        <td>类型
                        <td>字段及顺序
                        <td>x轴
                        <td>y轴
                        <td>操作
                    </tr>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-12">
                    <button type="button" id="zeppin-echarts-add-serie" class="btn btn-success">增加系列</button>
                    <button type="button" id="zeppin-echarts-refresh-graphic" class="btn btn-success">刷新图表</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="ze-graphic-container" class="col-sm-12">
            <div id="ze-graphic-body" class="ze-main"></div>
        </div>
    </div>
</div>
<script language="javascript">
        #if ($ZeppelinEChartsOriginJsonData)
        var orginData${ZeppelinEChartsParagraphId} = $ZeppelinEChartsOriginJsonData;
        #else
        var orginData${ZeppelinEChartsParagraphId} = [];
        #end
    var graphicBody${ZeppelinEChartsParagraphId} = null;
    var graphicBodyObj${ZeppelinEChartsParagraphId} = null;
    var serieConfigs${ZeppelinEChartsParagraphId} = new Array();
        #foreach($serie in $ZeppelinEchartsSerieList)
        serieConfigs${ZeppelinEChartsParagraphId}.push($serie.toString());
        #end
    option${ZeppelinEChartsParagraphId} = {
        title: {
            text: "",
            subtext: "",
        },
        tooltip: {
            trigger: "item"
        },
        legend: {
            right: 10,
            data: []
        },
        xAxis: [
            #foreach($xAxisIndex in [1..$ZeppelinECahrtsXAxisCount])
                {
                    splitLine: {
                        #if($xAxisIndex == 1)
                            show: true,
                            lineStyle: {
                                type: 'dashed'
                            }
                        #else
                            show: false
                        #end},
                    type: 'category'
                },
            #end],
        yAxis: [
            #foreach($yAxisIndex in [1..$ZeppelinECahrtsYAxisCount])
                {
                    splitLine: {
                        #if($yAxisIndex == 1)
                            lineStyle: {
                                type: 'dashed'
                            }
                        #else
                            show: false
                        #end},
                    scale: true,
                    type: 'value'
                },
            #end],
        series: [
            #foreach($seriesIndex in [1..$ZeppelinEchartsSeriesCount])
                {
                    name: "$seriesIndex",
                    type: "line",
                    data: []
                },
            #end]
    };

    function fillXY${ZeppelinEChartsParagraphId}(option) {
        if (option.xAxis && option.xAxis.length > 0) {
            for (var i = 0; i < option.xAxis.length; i++) {
                $("#${ZeppelinEChartsParagraphId} #ze-xaxis").append("<option value='" + i + "' " + (i == 0 ? "selected" : "") + ">" + i + "-" + (option.xAxis[i].type ? option.xAxis[i].type : "category") + "</option>");
            }
            $("#${ZeppelinEChartsParagraphId} #ze-xaxis-type option[value='" + (option.xAxis[0].type ? option.xAxis[0].type : "category") + "']").attr('selected', true);
            $("#${ZeppelinEChartsParagraphId} #ze-xaxis").change(function () {
                $("#${ZeppelinEChartsParagraphId} #ze-xaxis-type option:selected").attr("selected", false);
                var i = parseInt($(this).val());
                $("#${ZeppelinEChartsParagraphId} #ze-xaxis-type option[value='" + (option.xAxis[i].type ? option.xAxis[i].type : "category") + "']").attr('selected', true);
            });
            $("#${ZeppelinEChartsParagraphId} #ze-xaxis-type").change(function () {
                var type = $("#${ZeppelinEChartsParagraphId} #ze-xaxis-type option:selected").val();
                var index = $("#${ZeppelinEChartsParagraphId} #ze-xaxis option:selected").val();
                $("#${ZeppelinEChartsParagraphId} #ze-xaxis option:selected").text(index + "-" + type);
                option.xAxis[index].type = type;
            });
        }
        if (option.yAxis && option.yAxis.length > 0) {
            for (var i = 0; i < option.yAxis.length; i++) {
                $("#${ZeppelinEChartsParagraphId} #ze-yaxis").append("<option value='" + i + "' " + (i == 0 ? "selected" : "") + ">" + i + "-" + (option.yAxis[i].type ? option.yAxis[i].type : "value") + "</option>");
            }
            $("#${ZeppelinEChartsParagraphId} #ze-yaxis-type option[value='" + (option.yAxis[0].type ? option.yAxis[0].type : "value") + "']").attr("selected", true);
            $("#${ZeppelinEChartsParagraphId} #ze-yaxis").change(function () {
                $("#${ZeppelinEChartsParagraphId} #ze-yaxis-type option:selected").attr("selected", false);
                var i = parseInt($(this).val());
                $("#${ZeppelinEChartsParagraphId} #ze-yaxis-type option[value='" + (option.yAxis[i].type ? option.yAxis[i].type : "value") + "']").attr('selected', true);
            });
            $("#${ZeppelinEChartsParagraphId} #ze-yaxis-type").change(function () {
                var type = $("#${ZeppelinEChartsParagraphId} #ze-yaxis-type option:selected").val();
                var index = $("#${ZeppelinEChartsParagraphId} #ze-yaxis option:selected").val();
                $("#${ZeppelinEChartsParagraphId} #ze-yaxis option:selected").text(index + "-" + type);
                option.yAxis[index].type = type;
            });
        }
    }

    function updateZeppelinEChartsSeries() {
        $("#${ZeppelinEChartsParagraphId} #ze-series tr:gt(0)").remove();
        for (var index = 0; index < serieConfigs${ZeppelinEChartsParagraphId}.length; index++) {
            var cfg = serieConfigs${ZeppelinEChartsParagraphId}[index];
            $("#${ZeppelinEChartsParagraphId} #ze-series").append(
                    "<tr><td>" + index
                    + "<td>" + cfg.name
                    + "<td>" + cfg.type
                    + "<td>" + cfg.fields
                    + "<td>" + cfg.xAxisIndex
                    + "<td>" + cfg.yAxisIndex
                    + "<td><button name=\"ze-serie-edit\" type=\"button\" class=\"btn btn-default\">修改</button>&nbsp;&nbsp;"
                    + "<button name=\"ze-serie-update\" type=\"button\" class=\"btn btn-primary\">更新</button>&nbsp;&nbsp;"
                    + "<button name=\"ze-serie-delete\" type=\"button\" class=\"btn btn-danger\">删除</button>"
                    + "</tr>");
        }
        $("#${ZeppelinEChartsParagraphId} button[name='ze-serie-delete']").each(function () {
            $(this).click(function () {
                var serieIndex = parseInt($(this).parents("tr").children("td:eq(0)").html());
                serieConfigs${ZeppelinEChartsParagraphId}.del(serieIndex);
                $(this).parents("tr").remove();
                updateZeppelinEChartsSeries();
            });

        });
        $("#${ZeppelinEChartsParagraphId} button[name='ze-serie-edit']").each(function () {
            $(this).click(function () {
                var serieIndex = parseInt($(this).parents("tr").children("td:eq(0)").html());
                $("#${ZeppelinEChartsParagraphId} #ze-type option[value='" + serieConfigs${ZeppelinEChartsParagraphId}[serieIndex].type + "']").attr('selected', true);
                $("#${ZeppelinEChartsParagraphId} #ze-serie-name").val(serieConfigs${ZeppelinEChartsParagraphId}[serieIndex].name);
                $("#${ZeppelinEChartsParagraphId} #ze-xaxis option[value='" + serieConfigs${ZeppelinEChartsParagraphId}[serieIndex].xAxisIndex + "']").attr('selected', true);
                $("#${ZeppelinEChartsParagraphId} #ze-yaxis option[value='" + serieConfigs${ZeppelinEChartsParagraphId}[serieIndex].yAxisIndex + "']").attr('selected', true);
                fillOriginDataOptionsFromStruct(orginData${ZeppelinEChartsParagraphId}[0], ${ZeppelinEChartsParagraphId});
                var fieldArray = serieConfigs${ZeppelinEChartsParagraphId}[serieIndex].fields.split(",");
                for (var i = 0; i < fieldArray.length; i++) {
                    if (fieldArray[i] == "") {
                        break;
                    }
                    $("#${ZeppelinEChartsParagraphId} #ze-selected-fields").append("<option value='" + fieldArray[i] + "'>" + fieldArray[i] + "</option>");
                    $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields option[value='" + fieldArray[i] + "']").remove();
                }
            });
        });
        $("#${ZeppelinEChartsParagraphId} button[name='ze-serie-update']").each(function () {
            $(this).click(function () {
                var serieIndex = parseInt($(this).parents("tr").children("td:eq(0)").html());
                var selected = $("#${ZeppelinEChartsParagraphId} #ze-selected-fields option");
                var fields = "";
                for (var i = 0; i < selected.length; i++) {
                    if (i > 0) {
                        fields += ",";
                    }
                    fields += selected[i].value;
                }
                serieConfigs${ZeppelinEChartsParagraphId}[serieIndex] = {
                    "index": serieIndex,
                    "name": $("#${ZeppelinEChartsParagraphId} #ze-serie-name").val(),
                    "type": $("#${ZeppelinEChartsParagraphId} #ze-type").val(),
                    "fields": fields,
                    "xAxisIndex": $("#${ZeppelinEChartsParagraphId} #ze-xaxis").val(),
                    "yAxisIndex": $("#${ZeppelinEChartsParagraphId} #ze-yaxis").val()
                };
                fillOriginDataOptionsFromStruct(orginData${ZeppelinEChartsParagraphId}[0], ${ZeppelinEChartsParagraphId});
                updateZeppelinEChartsSeries();
            });
        });
    }
    $("#${ZeppelinEChartsParagraphId} #ze-fields-to-right").click(function () {
        var selected = $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields").val();
        for (var i = 0; i < selected.length; i++) {
            $("#${ZeppelinEChartsParagraphId} #ze-selected-fields").append("<option value='" + selected[i] + "'>" + selected[i] + "</option>");
        }
        for (var i = 0; i < selected.length; i++) {
            $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields option[value='" + selected[i] + "']").remove();
        }
    });
    $("#${ZeppelinEChartsParagraphId} #ze-fields-to-left").click(function () {
        var selected = $("#${ZeppelinEChartsParagraphId} #ze-selected-fields").val();
        for (var i = 0; i < selected.length; i++) {
            $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields").append("<option value='" + selected[i] + "'>" + selected[i] + "</option>");
        }
        for (var i = 0; i < selected.length; i++) {
            $("#${ZeppelinEChartsParagraphId} #ze-selected-fields option[value='" + selected[i] + "']").remove();
        }
    });
    $("#${ZeppelinEChartsParagraphId} #ze-fields-all-to-right").click(function () {
        var selected = $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields option");
        for (var i = 0; i < selected.length; i++) {
            $("#${ZeppelinEChartsParagraphId} #ze-selected-fields").append("<option value='" + selected[i].value + "'>" + selected[i].text + "</option>");
        }
        $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields option").remove();
    });
    $("#${ZeppelinEChartsParagraphId} #ze-fields-all-to-left").click(function () {
        var selected = $("#${ZeppelinEChartsParagraphId} #ze-selected-fields option");
        for (var i = 0; i < selected.length; i++) {
            $("#${ZeppelinEChartsParagraphId} #ze-selectable-fields").append("<option value='" + selected[i].value + "'>" + selected[i].text + "</option>");
        }
        $("#${ZeppelinEChartsParagraphId} #ze-selected-fields option").remove();
    });
    $("#${ZeppelinEChartsParagraphId} #zeppin-echarts-refresh-graphic").click(function () {
        var width = $("#${ZeppelinEChartsParagraphId} #ze-graphic-width").val();
        if (width != undefined && width != "") {
            $("#${ZeppelinEChartsParagraphId} #ze-graphic-body").css("width", width);
        }
        var height = $("#${ZeppelinEChartsParagraphId} #ze-graphic-height").val();
        if (height != undefined && width != "") {
            $("#${ZeppelinEChartsParagraphId} #ze-graphic-body").css("height", height);
        }
        drawChart(false, graphicBodyObj${ZeppelinEChartsParagraphId}, buildGraphicOption(option${ZeppelinEChartsParagraphId}, orginData${ZeppelinEChartsParagraphId}, ${ZeppelinEChartsParagraphId}, serieConfigs${ZeppelinEChartsParagraphId}));
    });

    $("#${ZeppelinEChartsParagraphId} #zeppin-echarts-add-serie").click(function () {
        var selected = $("#${ZeppelinEChartsParagraphId} #ze-selected-fields option");
        var fields = "";
        for (var i = 0; i < selected.length; i++) {
            if (i > 0) {
                fields += ",";
            }
            fields += selected[i].value;
        }
        serieConfigs${ZeppelinEChartsParagraphId}.push({
            "index": serieConfigs${ZeppelinEChartsParagraphId}.length,
            "name": $("#${ZeppelinEChartsParagraphId} #ze-serie-name").val(),
            "type": $("#${ZeppelinEChartsParagraphId} #ze-type").val(),
            "fields": fields,
            "xAxisIndex": $("#${ZeppelinEChartsParagraphId} #ze-xaxis").val(),
            "yAxisIndex": $("#${ZeppelinEChartsParagraphId} #ze-yaxis").val()
        });
        fillOriginDataOptionsFromStruct(orginData${ZeppelinEChartsParagraphId}[0], ${ZeppelinEChartsParagraphId});
        updateZeppelinEChartsSeries();
    });

        #if ($ZeppelinEchartsOptionSettings && $ZeppelinEchartsOptionSettings.size() > 0)
        try {
            #foreach($entry in $ZeppelinEchartsOptionSettings.entrySet())
                option${ZeppelinEChartsParagraphId}.$entry.key = $entry.value;
            #end
        } catch (e) {
            console.error("option settings error");
        }
        #end

    var jquery${ZeppelinEChartsParagraphId} = '$ZeppelinEChartsJQueryUrl',
            echarts${ZeppelinEChartsParagraphId} = '$ZeppelinEChartsJSUrl',
            bootstrap${ZeppelinEChartsParagraphId} = '$ZeppelinEChartsBootstrapURL',
            zeppelinEchartsJS${ZeppelinEChartsParagraphId} = '/plugins/zeppelin-echarts/js/zeppelin-echarts.js',
            zeppelinEchartsCSS${ZeppelinEChartsParagraphId} = '/plugins/zeppelin-echarts/css/zeppelin-echarts.css'
            ;

    spawn(function * ()
    {
        try {
            yield getJS(jquery${ZeppelinEChartsParagraphId});
            console.log('jquery has loaded');
            yield getJS(echarts${ZeppelinEChartsParagraphId});
            console.log('echarts has loaded');
            yield getJS(bootstrap${ZeppelinEChartsParagraphId});
            console.log('bootstrap has loaded');
            yield getJS(zeppelinEchartsJS${ZeppelinEChartsParagraphId});
            console.log('zeppelinEchartsJS has loaded');
            yield getCSS(zeppelinEchartsCSS${ZeppelinEChartsParagraphId});
            console.log('zeppelinEchartsCSS has loaded');
            $(document).ready(function () {
                #if($ZeppelinEChartsAdminConsole == false)
                    $("#${ZeppelinEChartsParagraphId} #ze-console").hide();
                #elseif ($ZeppelinEChartsUserConsole == false)
                    if (location.href.endsWith("?asIframe")) {
                        $("#${ZeppelinEChartsParagraphId} #ze-console").hide();
                    }
                #end
                #if($ZeppelinECahrtsWidth) $("#${ZeppelinEChartsParagraphId} #ze-graphic-body").css("width", "$ZeppelinECahrtsWidth"); #end
                #if($ZeppelinECahrtsHeight) $("#${ZeppelinEChartsParagraphId} #ze-graphic-body").css("height", "$ZeppelinECahrtsHeight"); #end
                $("#${ZeppelinEChartsParagraphId} #ze-title").val(option${ZeppelinEChartsParagraphId}.title.text);
                $("#${ZeppelinEChartsParagraphId} #ze-subtitle").val(option${ZeppelinEChartsParagraphId}.title.subtext);
                fillXY${ZeppelinEChartsParagraphId}(option${ZeppelinEChartsParagraphId});
                fillOriginDataOptionsFromStruct(orginData${ZeppelinEChartsParagraphId}[0], ${ZeppelinEChartsParagraphId});
                updateZeppelinEChartsSeries();
                graphicBody${ZeppelinEChartsParagraphId} = $("#${ZeppelinEChartsParagraphId} #ze-graphic-body")[0];
                graphicBodyObj${ZeppelinEChartsParagraphId} = echarts.init(graphicBody${ZeppelinEChartsParagraphId}, "macarons");
                $(window).resize(function () {
                    graphicBodyObj${ZeppelinEChartsParagraphId}.resize();
                });
                drawChart(false, graphicBodyObj${ZeppelinEChartsParagraphId}, buildGraphicOption(option${ZeppelinEChartsParagraphId}, orginData${ZeppelinEChartsParagraphId}, ${ZeppelinEChartsParagraphId}, serieConfigs${ZeppelinEChartsParagraphId}));
            });
        } catch (err) {
            console.log(err);
        }
    }
    )
    ;
</script>
#if ($ZeppelinEChartsBodyFoot)
    $ZeppelinEChartsBodyFoot
#end